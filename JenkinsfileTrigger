#!/usr/bin/env groovy


pipeline {
    agent {
        label 'master'
    }

    stages {

        // Decorate the build with the branch, change owner and build number
        stage('decorate-build') {
            steps {
                script {
                    decoratePRBuild()()
                }
            }
        }

        stage('run-tests') {
            parallel {
                stage('centos-aws') {
                    when {
                        expression {
                            anyOf {
                                sh(returnStatus: true, script: 'git diff  origin/master --name-only | egrep -i "*ami*|*aws*|*ec2*" > /dev/null') == 0
                                changeset glob: "*aws*"
                                changeset glob: "*ec2*"
                                changeset glob: "*ami*"
                            }
                        }
                    }

                    steps {
                        script {
                            def imageParams = readProperties file: 'environment.aws'
                            imageParams['CHANGE_BRANCH'] = env.CHANGE_BRANCH ?: false
                            imageParams['CHANGE_AUTHOR'] = env.CHANGE_AUTHOR ?: false
                            imageParams['TAG_NAME'] = env.TAG_NAME ?: false

                            scheduleBuild(buildName: 'centos-aws-image-build', stringParams: imageParams, triggerRetryCount: 1)
                        }
                    }
                }

                stage('centos-gcp') {
                    when {
                        expression {
                            sh(returnStatus: true, script: 'git diff  origin/master --name-only | egrep -i "*gcp*" > /dev/null') == 0
                        }
                    }

                    steps {
                        script {
                            def imageParams = readProperties file: 'environment.gcp'
                            scheduleBuild(buildName: 'centos-gcp-image-build', stringParams: imageParams, triggerRetryCount: 1)
                        }
                    }
                }
            }
        }
    }
}
